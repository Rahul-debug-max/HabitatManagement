@model FormDesignTemplateModelBE

@{
    Layout = null;
}

<style>
    .modal {
      /*position: absolute !important;*/
        overflow: auto !important;
    }

    .formOuterStyle {
        border: 1px solid;
        padding: 5px 0px 0px 0px;
    }

    .fontBold {
        font-weight: bold;
    }

    .conditionDigitalSignature canvas {
        height: 97px !important;
        background-color: white !important;
    }

    .tableCheckList td, .tableCheckList th {
        border: 1px solid black;
        padding: 3px 10px 3px 15px;
    }

    .dvCheckList table tr th:first-child, .dvCheckList table tr:first-child td, .dvCheckList table {
        border: none !important;
    }

    .tableCheckList {
        width: 100%;
        border-collapse: collapse;
    }

    .bgColorWhite {
        background-color: white;
    }


    .sectionStyle {
        outline: 1px dashed red !important;
        outline-offset: -3px;
        padding: 10px;
    }

        .sectionStyle:hover * {
            cursor: move;
        }

    .mrgright {
        margin-right: 2px;
    }

    .mrgleft {
        margin-left: 2px;
    }

    .form-control[readonly] {
        cursor: move;
        background-color: #eee !important;
        opacity: 1;
    }
</style>
@if (Model.RenderForDragnDrop)
{
    <script src="~/js/View/FormTemplateFields.js"></script>
}
<script src="~/js/JSignature/jSignature.js"></script>
<script src="~/js/JSignature/jSignature.CompressorBase30.js"></script>
<script src="~/js/JSignature/jSignature.CompressorSVG.js"></script>
<script src="~/js/JSignature/jSignature.UndoButton.js"></script>

<script type="text/javascript">
    var hasStopTimer = false;
    $(document).ready(function () {
        if ('@Model.RenderForDragnDrop' == 'True') {
            FormTemplateFields.onInit({
                formId: JSON.parse('@Model.FormID'),
                saveDataURL: '@Url.Action("FormDesignTemplateDetailFields", "Home")'
            });
        }
        reloadGridForPositioner();
        $('.dvSignatureDataType').each(function (i, ele) {
            var singnatureDv = $(ele).find('div[id^="digitalSignature_"]');
            if ($(singnatureDv).find('canvas').length == 0) {
                var $digSigdiv = singnatureDv.jSignature({ 'UndoButton': false, 'cssclass': 'digitalcanvas' });
                var image64BitString = $(ele).find('#SignatureResponse');
                if ($.trim($(image64BitString).val()) != "") {
                    $(singnatureDv).jSignature("importData", $(image64BitString).val());
                }
                $digSigdiv.jSignature("disable");
            }
        });

        $(window).trigger('resize');
        $(window).resize(function () {
            hasStopTimer = false;
            setTimeout(function () {
                if (!hasStopTimer) {
                    getDigitalSignature();
                }
            }, 1000);
        });

        setTimeout(function () {
            if (!hasStopTimer) {
                getDigitalSignature();
            }
        }, 1000);

        setDateTimePicker();

        $('.dvCheckList').find('input[type="checkbox"]').on('change', function () {
            var isChecked = $(this).is(":checked");
            $(this).closest("tr").find('input:checkbox').prop('checked', false);
            $(this).prop("checked", isChecked);
        });

        $('.formFieldTypeCheckbox').find('input[type="checkbox"]').on('change', function () {          
            var isChecked = $(this).is(":checked");
            $(this).closest("div").siblings().find('input:checkbox').prop('checked', false);
            $(this).prop("checked", isChecked);
        });        
    });

    function getDigitalSignature() {
        hasStopTimer = true;
        var signatureId = '';
        var digitalSignature = '';
        var digitalSignatureImage64BitString = '';
        $('.dvSignatureDataType').each(function (i, ele) {
            digitalSignature = $(ele).find('div[id^="digitalSignature_"]');
            digitalSignatureImage64BitString = $(ele).find('#SignatureResponse');
            signatureId = $(ele).find('#SignatureId');

            $.ajax({
                type: 'GET',
                cache: false,
                async: false,
                data: { signatureId: $(signatureId).val() != "" && $(signatureId).val() != null ? $(signatureId).val() : 0 },
                url: '@Url.Action("GetDigitalSignature", "Home")',
                success: function (result) {
                    if (result.signature) {
                        $(digitalSignature).jSignature("importData", result.signature);
                        $(digitalSignatureImage64BitString).val(result.signature);
                    }
                },
                error: function () {
                },
                beforeSend: function () { $("#wait").css("display", "block"); },
                complete: function () {
                    $("#wait").css("display", "none");
                }
            });
        });
    }

    function editDigitalSignature(obj) {
        var singnatureDv = $(obj).closest('.dvSignatureDataType').find('div[id^="digitalSignature_"]');
        if (singnatureDv.length > 0) {
            $(singnatureDv).jSignature("clear");
            $(singnatureDv).jSignature("enable");
            var image64BitString = $(obj).closest('.dvSignatureDataType').find('#SignatureResponse');
            $(image64BitString).val('');
        }
    }

    function resetDigitalSignature(obj) {
        var singnatureDv = $(obj).closest('.dvSignatureDataType').find('div[id^="digitalSignature_"]');
        if (singnatureDv.length > 0) {
            $(singnatureDv).jSignature("clear");
            $(singnatureDv).jSignature("disable");
            var image64BitString = $(obj).closest('.dvSignatureDataType').find('#SignatureResponse');
            if ($.trim($(image64BitString).val()) != "") {
                $(singnatureDv).jSignature("importData", $(image64BitString).val());
            }

            getDigitalSignature();
        }
    }

    var reloadGridForPositioner = function () {

    }

    var createdFormGrid = function (createdFormListColumnName) {
        $("#tblCreatedFormList").jqGrid("GridUnload");
        $("#tblCreatedFormList").jqGrid({
            url: '@Url.Action("GetCreatedFormListData", "Form")',
            datatype: 'json',
            mtype: 'Post',
            colNames: createdFormListColumnName,
            colModel: [
                { key: false, name: 'formID', index: 'formID', search: false, hidden: true },
                { key: false, name: 'surrogate', index: 'surrogate', search: false },
                { key: false, name: 'design', index: 'design', search: false },
                { key: false, name: 'description', index: 'description', search: false },
                { key: false, name: 'creationDate', index: 'creationDate', search: false }
            ],
            pager: jQuery('#pagerCreatedFormList'),
            rowNum: 10,
            rowList: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
            height: '100%',
            viewrecords: true,
            caption: '',
            emptyrecords: 'No records to display',
            jsonReader: {
                root: "rows",
                page: "page",
                total: "total",
                records: "records",
                Id: "0"
            },
            autowidth: true,
            multiselect: false,
            onSelectRow: function (id) {
                getSelectedFormDetail();
            },
            beforeRequest: function () {
                $(this).jqGrid('setGridParam', {
                    postData: {
                        formID: @Model.FormID
                    }
                });
            },
            gridComplete: function (e) {
            },
        }).navGrid('#pagerCreatedFormList', { edit: false, add: false, del: false, search: false, refresh: false })

        $("#tblCreatedFormList").jqGrid('setLabel', 'Select', '', { 'text-align': 'center' });
    }

    var getSelectedFormDetail = function () {
        var gr = $("#tblCreatedFormList").getGridParam('selrow');
        if (gr != null) {
            var surrogate = $("#tblCreatedFormList").getRowData(gr).surrogate;
            var formId = $("#tblCreatedFormList").getRowData(gr).formID;
            $.ajax({
            cache: false,
            async: false,
            data: { formID: formId, surrogate: surrogate},
            url: '@Url.Action("EditCreatedForm", "Home")',
            success: function (result) {
                $('.dvFormFeedbackData').html(result);
            },
            error: function () {
            },
            beforeSend: function () { $("#wait").css("display", "block"); },
            complete: function () { $("#wait").css("display", "none"); }
        });
        }
    }

</script>

<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 paddlftrght-none xspaddrght dvFormFeedbackData">
    @if (!Model.RenderForDragnDrop)
    {
    <ul style="color:red; display:none;" class="formErrorMessage mb-2 pl-3">
        <li>
            <span class="text-danger field-validation-error" data-valmsg-for="Form" data-valmsg-replace="true">
                <span for="Form" generated="true" class="">Fill the form</span>
            </span>
        </li>
    </ul>
    }
    @Html.Raw(Model.HtmlForm)
</div>
